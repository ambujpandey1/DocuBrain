'use client';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Skeleton } from '@/components/ui/skeleton';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { FileText, Lightbulb, HelpCircle, BookOpen } from 'lucide-react';
import type { Challenge } from '@/lib/types';
import AskAnything from './ask-anything';
import ChallengeMe from './challenge-me';
import { ScrollArea } from './ui/scroll-area';

interface DocInteractionViewProps {
  docName: string;
  docContent: string;
  summary: string | null;
  challenges: Challenge[] | null;
  isLoading: boolean;
}

export default function DocInteractionView({
  docName,
  docContent,
  summary,
  challenges,
  isLoading,
}: DocInteractionViewProps) {
  return (
    <div className="grid grid-cols-1 gap-8 lg:grid-cols-3">
      {/* Left Column: Summary */}
      <div className="lg:col-span-1">
        <Card className="sticky top-24">
          <CardHeader>
             <CardTitle className="flex items-center gap-3 text-2xl">
                <FileText className="h-7 w-7 text-primary" />
                <span className='truncate'>{isLoading ? 'Processing...' : docName}</span>
              </CardTitle>
              <CardDescription>A brief overview generated by AI.</CardDescription>
          </CardHeader>
          <CardContent>
            <h3 className="mb-3 text-lg font-semibold">Summary</h3>
            {isLoading || !summary ? (
              <div className="space-y-2">
                <Skeleton className="h-4 w-full" />
                <Skeleton className="h-4 w-full" />
                <Skeleton className="h-4 w-full" />
                <Skeleton className="h-4 w-4/5" />
              </div>
            ) : (
              <ScrollArea className="h-96">
                <p className="text-sm text-muted-foreground pr-4">{summary}</p>
              </ScrollArea>
            )}
          </CardContent>
        </Card>
      </div>
      
      {/* Right Column: Interaction Tabs */}
      <div className="lg:col-span-2">
        <Tabs defaultValue="ask">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="ask">
              <HelpCircle className="mr-2 h-4 w-4" />
              Ask Anything
            </TabsTrigger>
            <TabsTrigger value="challenge">
              <Lightbulb className="mr-2 h-4 w-4" />
              Challenge Me
            </TabsTrigger>
            <TabsTrigger value="document">
              <BookOpen className="mr-2 h-4 w-4" />
              View Document
            </TabsTrigger>
          </TabsList>
          <TabsContent value="ask" className="mt-4">
             <AskAnything docContent={docContent} />
          </TabsContent>
          <TabsContent value="challenge" className="mt-4">
            <ChallengeMe challenges={challenges} isLoading={isLoading} />
          </TabsContent>
          <TabsContent value="document" className="mt-4">
            <Card>
              <CardHeader>
                <CardTitle>Document Content</CardTitle>
                <CardDescription>
                  Scroll to read the full content of your document.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <ScrollArea className="h-[60vh] rounded-md border bg-muted/30 p-4 font-code text-sm">
                  <pre className="whitespace-pre-wrap">{isLoading ? 'Loading document content...' : docContent}</pre>
                </ScrollArea>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}
